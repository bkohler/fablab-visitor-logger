name: Python Tests and Quality Checks

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
      fail-fast: false

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-py${{ matrix.python-version }}-pip-

    - name: Cache APT packages
      id: apt-cache
      uses: actions/cache@v3
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-apt-${{ hashFiles('**/apt-packages.txt') }}

    - name: Create apt-packages.txt for cache key
      run: |
        echo "libglib2.0-dev libbluetooth-dev pkg-config" > apt-packages.txt

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libglib2.0-dev libbluetooth-dev pkg-config

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt || echo "Warning: Some requirements failed to install"
        pip install -r requirements-dev.txt
        pip install behave pytest-asyncio
        pip install -e .

    - name: Lint with flake8
      continue-on-error: true
      run: |
        flake8 fablab_visitor_logger tests

    - name: Check formatting with black
      continue-on-error: true
      run: |
        black --check .

    - name: Check imports with isort
      continue-on-error: true
      run: |
        isort --check-only --profile black .

    - name: Type check with mypy
      continue-on-error: true
      run: |
        mypy fablab_visitor_logger tests

    - name: Security check with bandit
      continue-on-error: true
      run: |
        bandit -r fablab_visitor_logger

    - name: Run unit tests
      run: |
        pytest --cov=fablab_visitor_logger --cov-report=xml tests/

    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.python-version }}
        fail_ci_if_error: false

    - name: Run BDD tests
      run: |
        behave tests/features/
